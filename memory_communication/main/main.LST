C51 COMPILER V9.01   MAIN                                                                  09/02/2023 18:05:48 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\phan_mem\KEIL\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <AT89X51.H>
   2          
   3          
   4          
   5          #define B9600 -3        // baud 9600 11.059MHz(clock frequency of 8051)
   6          #define B4800 -6        // baud 4800 11.059MHz
   7          #define B2400 -12       // baud 2400 11.059MHz
   8          #define B1200 -24       // baud 1200 11.059MHz
   9          
  10          #define DBLED P3_2
  11          #define LAT P3_5
  12          #define OE P3_6 
  13          #define CE P3_7         
  14          
  15          
  16          
  17          // siop.c
  18          extern void SetupSerial(char baud);
  19          extern void TxChar(unsigned char ch);
  20          extern unsigned char RxChar(void);
  21          extern void TxStr(char *str);
  22          extern void TxHex(unsigned char ch);
  23          extern void TxCrLf(void);
  24          
  25          void ReadXRom(void);
  26          unsigned char ReadByte(unsigned int Addr);
  27          
  28          
  29          
  30          void main (void)
  31          {
  32   1              unsigned char ch;
  33   1      
  34   1              SP = 0x62;      // stack pointer (chua dia chi cua data hien tai dang o dinh cua stack)
  35   1      
  36   1              SetupSerial(B9600);
  37   1              
  38   1              TxStr("-----------------------------------");
  39   1              TxCrLf();
  40   1              TxStr("External rom");
  41   1              TxCrLf();
  42   1      
  43   1              while(1) 
  44   1              {
  45   2                      if (RI)                                                 // receive char completely
  46   2                      {                                               
  47   3                              DBLED = 0;                                      // LED on
  48   3      
  49   3                              ch = RxChar();                          // receive char
  50   3      
  51   3                              TxChar(ch);                                     // transmit char
  52   3                              TxCrLf();
  53   3      
  54   3                              switch(ch) {
  55   4                                      case 'R':                               
C51 COMPILER V9.01   MAIN                                                                  09/02/2023 18:05:48 PAGE 2   

  56   4                                              ReadXRom();
  57   4                                              break;
  58   4                                      default:
  59   4                                              break;
  60   4                              }
  61   3                      }
  62   2              }
  63   1      }
  64          
  65          
  66          
  67          void ReadXRom(void)
  68          {
  69   1              unsigned char ch;
  70   1              unsigned int addr;
  71   1      
  72   1              for (addr = 0; addr < 10; addr++) {
  73   2                      ch = ReadByte(addr);
  74   2                      TxHex(ch);
  75   2              }
  76   1      
  77   1              TxCrLf();
  78   1      }
  79          
  80          
  81          
  82          unsigned char ReadByte(unsigned int Addr)       
  83          {
  84   1              unsigned char RetVal, highAddr, lowAddr;
  85   1      
  86   1              lowAddr = (unsigned char) Addr;                 
  87   1              highAddr = (unsigned char) (Addr >> 8);
  88   1                      
  89   1              P0 = lowAddr;                                                           
  90   1              LAT = 1;
  91   1              LAT = 0;
  92   1              highAddr &= 0x7f;       // 7-bit high address
  93   1              P2 = highAddr;                                                  
  94   1      
  95   1              CE = 0;
  96   1              OE = 0;
  97   1      
  98   1              RetVal = P0;
  99   1                                                                      
 100   1              CE = 1;
 101   1              OE = 1;
 102   1      
 103   1              return RetVal;                                                  
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
